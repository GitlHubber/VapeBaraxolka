// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class ContentSellerProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ProgressBar progressSeller;

  @NonNull
  public final RecyclerView sellerAdsProfile;

  @NonNull
  public final TextView sellerEmailProfile;

  @NonNull
  public final TextView sellerPhoneNumberProfile;

  @NonNull
  public final TextView sellerRegionTownProfile;

  @NonNull
  public final TextView sellerTextAdsProfile;

  private ContentSellerProfileBinding(@NonNull NestedScrollView rootView,
      @NonNull ProgressBar progressSeller, @NonNull RecyclerView sellerAdsProfile,
      @NonNull TextView sellerEmailProfile, @NonNull TextView sellerPhoneNumberProfile,
      @NonNull TextView sellerRegionTownProfile, @NonNull TextView sellerTextAdsProfile) {
    this.rootView = rootView;
    this.progressSeller = progressSeller;
    this.sellerAdsProfile = sellerAdsProfile;
    this.sellerEmailProfile = sellerEmailProfile;
    this.sellerPhoneNumberProfile = sellerPhoneNumberProfile;
    this.sellerRegionTownProfile = sellerRegionTownProfile;
    this.sellerTextAdsProfile = sellerTextAdsProfile;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentSellerProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentSellerProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_seller_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentSellerProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.progress_seller;
      ProgressBar progressSeller = rootView.findViewById(id);
      if (progressSeller == null) {
        break missingId;
      }

      id = R.id.sellerAdsProfile;
      RecyclerView sellerAdsProfile = rootView.findViewById(id);
      if (sellerAdsProfile == null) {
        break missingId;
      }

      id = R.id.sellerEmailProfile;
      TextView sellerEmailProfile = rootView.findViewById(id);
      if (sellerEmailProfile == null) {
        break missingId;
      }

      id = R.id.sellerPhoneNumberProfile;
      TextView sellerPhoneNumberProfile = rootView.findViewById(id);
      if (sellerPhoneNumberProfile == null) {
        break missingId;
      }

      id = R.id.sellerRegionTownProfile;
      TextView sellerRegionTownProfile = rootView.findViewById(id);
      if (sellerRegionTownProfile == null) {
        break missingId;
      }

      id = R.id.sellerTextAdsProfile;
      TextView sellerTextAdsProfile = rootView.findViewById(id);
      if (sellerTextAdsProfile == null) {
        break missingId;
      }

      return new ContentSellerProfileBinding((NestedScrollView) rootView, progressSeller,
          sellerAdsProfile, sellerEmailProfile, sellerPhoneNumberProfile, sellerRegionTownProfile,
          sellerTextAdsProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
