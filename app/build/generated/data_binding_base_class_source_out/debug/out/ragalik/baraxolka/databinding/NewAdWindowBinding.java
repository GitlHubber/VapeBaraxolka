// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class NewAdWindowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView adPreviewCategory;

  @NonNull
  public final TextView adPreviewDescription;

  @NonNull
  public final ImageView adPreviewPhoto;

  @NonNull
  public final TextView adPreviewRegionTown;

  @NonNull
  public final TextView adPreviewTitle;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView views;

  private NewAdWindowBinding(@NonNull LinearLayout rootView, @NonNull TextView adPreviewCategory,
      @NonNull TextView adPreviewDescription, @NonNull ImageView adPreviewPhoto,
      @NonNull TextView adPreviewRegionTown, @NonNull TextView adPreviewTitle,
      @NonNull TextView textView13, @NonNull TextView textView6, @NonNull TextView views) {
    this.rootView = rootView;
    this.adPreviewCategory = adPreviewCategory;
    this.adPreviewDescription = adPreviewDescription;
    this.adPreviewPhoto = adPreviewPhoto;
    this.adPreviewRegionTown = adPreviewRegionTown;
    this.adPreviewTitle = adPreviewTitle;
    this.textView13 = textView13;
    this.textView6 = textView6;
    this.views = views;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewAdWindowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewAdWindowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.new_ad_window, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewAdWindowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ad_preview_category;
      TextView adPreviewCategory = rootView.findViewById(id);
      if (adPreviewCategory == null) {
        break missingId;
      }

      id = R.id.ad_preview_description;
      TextView adPreviewDescription = rootView.findViewById(id);
      if (adPreviewDescription == null) {
        break missingId;
      }

      id = R.id.ad_preview_photo;
      ImageView adPreviewPhoto = rootView.findViewById(id);
      if (adPreviewPhoto == null) {
        break missingId;
      }

      id = R.id.ad_preview_region_town;
      TextView adPreviewRegionTown = rootView.findViewById(id);
      if (adPreviewRegionTown == null) {
        break missingId;
      }

      id = R.id.ad_preview_title;
      TextView adPreviewTitle = rootView.findViewById(id);
      if (adPreviewTitle == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = rootView.findViewById(id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = rootView.findViewById(id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.views;
      TextView views = rootView.findViewById(id);
      if (views == null) {
        break missingId;
      }

      return new NewAdWindowBinding((LinearLayout) rootView, adPreviewCategory,
          adPreviewDescription, adPreviewPhoto, adPreviewRegionTown, adPreviewTitle, textView13,
          textView6, views);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
