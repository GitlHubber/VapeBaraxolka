// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class FragmentLogInBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppCompatButton AcceptLogInButton;

  @NonNull
  public final TextView AppName1;

  @NonNull
  public final TextView AppName2;

  @NonNull
  public final TextInputLayout LIPasswordLayout;

  @NonNull
  public final TextInputLayout PhNumberOrEmailLayout;

  @NonNull
  public final AppCompatButton SignInLogInButton;

  @NonNull
  public final Toolbar toolbarAuthorization;

  private FragmentLogInBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppCompatButton AcceptLogInButton, @NonNull TextView AppName1,
      @NonNull TextView AppName2, @NonNull TextInputLayout LIPasswordLayout,
      @NonNull TextInputLayout PhNumberOrEmailLayout, @NonNull AppCompatButton SignInLogInButton,
      @NonNull Toolbar toolbarAuthorization) {
    this.rootView = rootView;
    this.AcceptLogInButton = AcceptLogInButton;
    this.AppName1 = AppName1;
    this.AppName2 = AppName2;
    this.LIPasswordLayout = LIPasswordLayout;
    this.PhNumberOrEmailLayout = PhNumberOrEmailLayout;
    this.SignInLogInButton = SignInLogInButton;
    this.toolbarAuthorization = toolbarAuthorization;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AcceptLogInButton;
      AppCompatButton AcceptLogInButton = rootView.findViewById(id);
      if (AcceptLogInButton == null) {
        break missingId;
      }

      id = R.id.AppName1;
      TextView AppName1 = rootView.findViewById(id);
      if (AppName1 == null) {
        break missingId;
      }

      id = R.id.AppName2;
      TextView AppName2 = rootView.findViewById(id);
      if (AppName2 == null) {
        break missingId;
      }

      id = R.id.LIPasswordLayout;
      TextInputLayout LIPasswordLayout = rootView.findViewById(id);
      if (LIPasswordLayout == null) {
        break missingId;
      }

      id = R.id.PhNumberOrEmailLayout;
      TextInputLayout PhNumberOrEmailLayout = rootView.findViewById(id);
      if (PhNumberOrEmailLayout == null) {
        break missingId;
      }

      id = R.id.SignInLogInButton;
      AppCompatButton SignInLogInButton = rootView.findViewById(id);
      if (SignInLogInButton == null) {
        break missingId;
      }

      id = R.id.toolbar_authorization;
      Toolbar toolbarAuthorization = rootView.findViewById(id);
      if (toolbarAuthorization == null) {
        break missingId;
      }

      return new FragmentLogInBinding((CoordinatorLayout) rootView, AcceptLogInButton, AppName1,
          AppName2, LIPasswordLayout, PhNumberOrEmailLayout, SignInLogInButton,
          toolbarAuthorization);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
