// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class FragmentAdCreatorImageMenuBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView adCreatorDeleteImage;

  @NonNull
  public final AppCompatTextView adCreatorLoadImage;

  @NonNull
  public final LinearLayout adCreatorMenuLinearLayout;

  @NonNull
  public final AppCompatTextView adCreatorShowImage;

  @NonNull
  public final AppCompatTextView adCreatorTakeImage;

  @NonNull
  public final AppCompatTextView textView5;

  private FragmentAdCreatorImageMenuBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatTextView adCreatorDeleteImage,
      @NonNull AppCompatTextView adCreatorLoadImage,
      @NonNull LinearLayout adCreatorMenuLinearLayout,
      @NonNull AppCompatTextView adCreatorShowImage, @NonNull AppCompatTextView adCreatorTakeImage,
      @NonNull AppCompatTextView textView5) {
    this.rootView = rootView;
    this.adCreatorDeleteImage = adCreatorDeleteImage;
    this.adCreatorLoadImage = adCreatorLoadImage;
    this.adCreatorMenuLinearLayout = adCreatorMenuLinearLayout;
    this.adCreatorShowImage = adCreatorShowImage;
    this.adCreatorTakeImage = adCreatorTakeImage;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdCreatorImageMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdCreatorImageMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ad_creator_image_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdCreatorImageMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      AppCompatTextView adCreatorDeleteImage = rootView.findViewById(R.id.ad_creator_delete_image);
      if (adCreatorDeleteImage == null) {
        missingId = "adCreatorDeleteImage";
        break missingId;
      }
      AppCompatTextView adCreatorLoadImage = rootView.findViewById(R.id.ad_creator_load_image);
      if (adCreatorLoadImage == null) {
        missingId = "adCreatorLoadImage";
        break missingId;
      }
      LinearLayout adCreatorMenuLinearLayout = rootView.findViewById(R.id.adCreatorMenuLinearLayout);
      if (adCreatorMenuLinearLayout == null) {
        missingId = "adCreatorMenuLinearLayout";
        break missingId;
      }
      AppCompatTextView adCreatorShowImage = rootView.findViewById(R.id.ad_creator_show_image);
      if (adCreatorShowImage == null) {
        missingId = "adCreatorShowImage";
        break missingId;
      }
      AppCompatTextView adCreatorTakeImage = rootView.findViewById(R.id.ad_creator_take_image);
      if (adCreatorTakeImage == null) {
        missingId = "adCreatorTakeImage";
        break missingId;
      }
      AppCompatTextView textView5 = rootView.findViewById(R.id.textView5);
      if (textView5 == null) {
        missingId = "textView5";
        break missingId;
      }
      return new FragmentAdCreatorImageMenuBinding((LinearLayout) rootView, adCreatorDeleteImage,
          adCreatorLoadImage, adCreatorMenuLinearLayout, adCreatorShowImage, adCreatorTakeImage,
          textView5);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
