// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class FragmentSortBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView AcceptSortButton;

  @NonNull
  public final RadioButton byDate;

  @NonNull
  public final RadioButton byPriceDown;

  @NonNull
  public final RadioButton byPriceUp;

  @NonNull
  public final RadioButton byViews;

  @NonNull
  public final TextView clearSort;

  private FragmentSortBinding(@NonNull LinearLayout rootView, @NonNull TextView AcceptSortButton,
      @NonNull RadioButton byDate, @NonNull RadioButton byPriceDown, @NonNull RadioButton byPriceUp,
      @NonNull RadioButton byViews, @NonNull TextView clearSort) {
    this.rootView = rootView;
    this.AcceptSortButton = AcceptSortButton;
    this.byDate = byDate;
    this.byPriceDown = byPriceDown;
    this.byPriceUp = byPriceUp;
    this.byViews = byViews;
    this.clearSort = clearSort;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sort, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView AcceptSortButton = rootView.findViewById(R.id.AcceptSortButton);
      if (AcceptSortButton == null) {
        missingId = "AcceptSortButton";
        break missingId;
      }
      RadioButton byDate = rootView.findViewById(R.id.byDate);
      if (byDate == null) {
        missingId = "byDate";
        break missingId;
      }
      RadioButton byPriceDown = rootView.findViewById(R.id.byPriceDown);
      if (byPriceDown == null) {
        missingId = "byPriceDown";
        break missingId;
      }
      RadioButton byPriceUp = rootView.findViewById(R.id.byPriceUp);
      if (byPriceUp == null) {
        missingId = "byPriceUp";
        break missingId;
      }
      RadioButton byViews = rootView.findViewById(R.id.byViews);
      if (byViews == null) {
        missingId = "byViews";
        break missingId;
      }
      TextView clearSort = rootView.findViewById(R.id.clearSort);
      if (clearSort == null) {
        missingId = "clearSort";
        break missingId;
      }
      return new FragmentSortBinding((LinearLayout) rootView, AcceptSortButton, byDate, byPriceDown,
          byPriceUp, byViews, clearSort);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
