// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class FragmentPriceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView AcceptPriceButton;

  @NonNull
  public final TextView clearPrice;

  @NonNull
  public final EditText priceFrom;

  @NonNull
  public final EditText priceTo;

  @NonNull
  public final TextView textView8;

  private FragmentPriceBinding(@NonNull LinearLayout rootView, @NonNull TextView AcceptPriceButton,
      @NonNull TextView clearPrice, @NonNull EditText priceFrom, @NonNull EditText priceTo,
      @NonNull TextView textView8) {
    this.rootView = rootView;
    this.AcceptPriceButton = AcceptPriceButton;
    this.clearPrice = clearPrice;
    this.priceFrom = priceFrom;
    this.priceTo = priceTo;
    this.textView8 = textView8;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPriceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPriceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_price, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPriceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView AcceptPriceButton = rootView.findViewById(R.id.AcceptPriceButton);
      if (AcceptPriceButton == null) {
        missingId = "AcceptPriceButton";
        break missingId;
      }
      TextView clearPrice = rootView.findViewById(R.id.clearPrice);
      if (clearPrice == null) {
        missingId = "clearPrice";
        break missingId;
      }
      EditText priceFrom = rootView.findViewById(R.id.priceFrom);
      if (priceFrom == null) {
        missingId = "priceFrom";
        break missingId;
      }
      EditText priceTo = rootView.findViewById(R.id.priceTo);
      if (priceTo == null) {
        missingId = "priceTo";
        break missingId;
      }
      TextView textView8 = rootView.findViewById(R.id.textView8);
      if (textView8 == null) {
        missingId = "textView8";
        break missingId;
      }
      return new FragmentPriceBinding((LinearLayout) rootView, AcceptPriceButton, clearPrice,
          priceFrom, priceTo, textView8);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
