// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class FragmentAdministratorBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button SETEDITOR;

  @NonNull
  public final Toolbar administratorToolbar;

  @NonNull
  public final TextInputEditText findUserET;

  private FragmentAdministratorBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button SETEDITOR, @NonNull Toolbar administratorToolbar,
      @NonNull TextInputEditText findUserET) {
    this.rootView = rootView;
    this.SETEDITOR = SETEDITOR;
    this.administratorToolbar = administratorToolbar;
    this.findUserET = findUserET;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdministratorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdministratorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_administrator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdministratorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SET_EDITOR;
      Button SETEDITOR = rootView.findViewById(id);
      if (SETEDITOR == null) {
        break missingId;
      }

      id = R.id.administratorToolbar;
      Toolbar administratorToolbar = rootView.findViewById(id);
      if (administratorToolbar == null) {
        break missingId;
      }

      id = R.id.findUserET;
      TextInputEditText findUserET = rootView.findViewById(id);
      if (findUserET == null) {
        break missingId;
      }

      return new FragmentAdministratorBinding((CoordinatorLayout) rootView, SETEDITOR,
          administratorToolbar, findUserET);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
