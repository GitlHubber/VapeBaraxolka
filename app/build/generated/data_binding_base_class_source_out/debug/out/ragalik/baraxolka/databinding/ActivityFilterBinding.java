// Generated by view binder compiler. Do not edit!
package ragalik.baraxolka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatAutoCompleteTextView;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ragalik.baraxolka.R;

public final class ActivityFilterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout SFCategoryLayout;

  @NonNull
  public final AppCompatAutoCompleteTextView SFCategorySpinner;

  @NonNull
  public final TextInputLayout SFSubcategoryLayout;

  @NonNull
  public final AppCompatAutoCompleteTextView SFSubcategorySpinner;

  @NonNull
  public final AppCompatButton filterCategoryButton;

  @NonNull
  public final Toolbar toolbarFilterActivity;

  private ActivityFilterBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout SFCategoryLayout,
      @NonNull AppCompatAutoCompleteTextView SFCategorySpinner,
      @NonNull TextInputLayout SFSubcategoryLayout,
      @NonNull AppCompatAutoCompleteTextView SFSubcategorySpinner,
      @NonNull AppCompatButton filterCategoryButton, @NonNull Toolbar toolbarFilterActivity) {
    this.rootView = rootView;
    this.SFCategoryLayout = SFCategoryLayout;
    this.SFCategorySpinner = SFCategorySpinner;
    this.SFSubcategoryLayout = SFSubcategoryLayout;
    this.SFSubcategorySpinner = SFSubcategorySpinner;
    this.filterCategoryButton = filterCategoryButton;
    this.toolbarFilterActivity = toolbarFilterActivity;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextInputLayout SFCategoryLayout = rootView.findViewById(R.id.SF_categoryLayout);
      if (SFCategoryLayout == null) {
        missingId = "SFCategoryLayout";
        break missingId;
      }
      AppCompatAutoCompleteTextView SFCategorySpinner = rootView.findViewById(R.id.SF_categorySpinner);
      if (SFCategorySpinner == null) {
        missingId = "SFCategorySpinner";
        break missingId;
      }
      TextInputLayout SFSubcategoryLayout = rootView.findViewById(R.id.SF_subcategoryLayout);
      if (SFSubcategoryLayout == null) {
        missingId = "SFSubcategoryLayout";
        break missingId;
      }
      AppCompatAutoCompleteTextView SFSubcategorySpinner = rootView.findViewById(R.id.SF_subcategorySpinner);
      if (SFSubcategorySpinner == null) {
        missingId = "SFSubcategorySpinner";
        break missingId;
      }
      AppCompatButton filterCategoryButton = rootView.findViewById(R.id.filterCategoryButton);
      if (filterCategoryButton == null) {
        missingId = "filterCategoryButton";
        break missingId;
      }
      Toolbar toolbarFilterActivity = rootView.findViewById(R.id.toolbar_filter_activity);
      if (toolbarFilterActivity == null) {
        missingId = "toolbarFilterActivity";
        break missingId;
      }
      return new ActivityFilterBinding((LinearLayout) rootView, SFCategoryLayout, SFCategorySpinner,
          SFSubcategoryLayout, SFSubcategorySpinner, filterCategoryButton, toolbarFilterActivity);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
